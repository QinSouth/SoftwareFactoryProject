<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.factory.mapper.DiscountschedulebillMapper" >
  <resultMap id="BaseResultMap" type="com.factory.entity.Discountschedulebill" >
    <id column="dsbid" property="dsbid" jdbcType="INTEGER" />
    <result column="dpbid" property="dpbid" jdbcType="VARCHAR" />
    <result column="stockNumber" property="stocknumber" jdbcType="VARCHAR" />
    <result column="discountPrice" property="discountprice" jdbcType="REAL" />
    <result column="standby" property="standby" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.factory.entity.Discountschedulebill" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dsbid, dpbid, stockNumber, discountPrice, standby
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.factory.entity.DiscountschedulebillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from discountschedulebill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.factory.entity.DiscountschedulebillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from discountschedulebill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from discountschedulebill
    where dsbid = #{dsbid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from discountschedulebill
    where dsbid = #{dsbid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.factory.entity.DiscountschedulebillExample" >
    delete from discountschedulebill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.factory.entity.Discountschedulebill" >
    insert into discountschedulebill (dsbid, dpbid, stockNumber, 
      discountPrice, standby, remark
      )
    values (#{dsbid,jdbcType=INTEGER}, #{dpbid,jdbcType=VARCHAR}, #{stocknumber,jdbcType=VARCHAR}, 
      #{discountprice,jdbcType=REAL}, #{standby,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.factory.entity.Discountschedulebill" >
    insert into discountschedulebill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dsbid != null" >
        dsbid,
      </if>
      <if test="dpbid != null" >
        dpbid,
      </if>
      <if test="stocknumber != null" >
        stockNumber,
      </if>
      <if test="discountprice != null" >
        discountPrice,
      </if>
      <if test="standby != null" >
        standby,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dsbid != null" >
        #{dsbid,jdbcType=INTEGER},
      </if>
      <if test="dpbid != null" >
        #{dpbid,jdbcType=VARCHAR},
      </if>
      <if test="stocknumber != null" >
        #{stocknumber,jdbcType=VARCHAR},
      </if>
      <if test="discountprice != null" >
        #{discountprice,jdbcType=REAL},
      </if>
      <if test="standby != null" >
        #{standby,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.factory.entity.DiscountschedulebillExample" resultType="java.lang.Integer" >
    select count(*) from discountschedulebill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update discountschedulebill
    <set >
      <if test="record.dsbid != null" >
        dsbid = #{record.dsbid,jdbcType=INTEGER},
      </if>
      <if test="record.dpbid != null" >
        dpbid = #{record.dpbid,jdbcType=VARCHAR},
      </if>
      <if test="record.stocknumber != null" >
        stockNumber = #{record.stocknumber,jdbcType=VARCHAR},
      </if>
      <if test="record.discountprice != null" >
        discountPrice = #{record.discountprice,jdbcType=REAL},
      </if>
      <if test="record.standby != null" >
        standby = #{record.standby,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update discountschedulebill
    set dsbid = #{record.dsbid,jdbcType=INTEGER},
      dpbid = #{record.dpbid,jdbcType=VARCHAR},
      stockNumber = #{record.stocknumber,jdbcType=VARCHAR},
      discountPrice = #{record.discountprice,jdbcType=REAL},
      standby = #{record.standby,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update discountschedulebill
    set dsbid = #{record.dsbid,jdbcType=INTEGER},
      dpbid = #{record.dpbid,jdbcType=VARCHAR},
      stockNumber = #{record.stocknumber,jdbcType=VARCHAR},
      discountPrice = #{record.discountprice,jdbcType=REAL},
      standby = #{record.standby,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.factory.entity.Discountschedulebill" >
    update discountschedulebill
    <set >
      <if test="dpbid != null" >
        dpbid = #{dpbid,jdbcType=VARCHAR},
      </if>
      <if test="stocknumber != null" >
        stockNumber = #{stocknumber,jdbcType=VARCHAR},
      </if>
      <if test="discountprice != null" >
        discountPrice = #{discountprice,jdbcType=REAL},
      </if>
      <if test="standby != null" >
        standby = #{standby,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where dsbid = #{dsbid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.factory.entity.Discountschedulebill" >
    update discountschedulebill
    set dpbid = #{dpbid,jdbcType=VARCHAR},
      stockNumber = #{stocknumber,jdbcType=VARCHAR},
      discountPrice = #{discountprice,jdbcType=REAL},
      standby = #{standby,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where dsbid = #{dsbid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.factory.entity.Discountschedulebill" >
    update discountschedulebill
    set dpbid = #{dpbid,jdbcType=VARCHAR},
      stockNumber = #{stocknumber,jdbcType=VARCHAR},
      discountPrice = #{discountprice,jdbcType=REAL},
      standby = #{standby,jdbcType=VARCHAR}
    where dsbid = #{dsbid,jdbcType=INTEGER}
  </update>
</mapper>